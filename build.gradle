import groovy.io.FileType

apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'eclipse'

group = 'com.thegamecommunity'
version = "${project.version}"

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://libraries.minecraft.net"
        }
    }
}

repositories {
    maven {
        url "https://libraries.minecraft.net"
    }
    mavenCentral()
}

dependencies {
    testImplementation libs.guava.core
    testImplementation libs.junit
    testImplementation libs.hamcrest
    testImplementation libs.mockito.core
    testImplementation libs.mockito.junit
    testImplementation libs.guava.testlib
    testImplementation libs.jmh.core
    annotationProcessor libs.jmh.generator
}

task sourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

artifacts {
    archives jar
    archives sourcesJar
}

test {
    testLogging {
        events "failed", "skipped"
        showStandardStreams = true
        showExceptions true
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
        }
    }
}

task report {
    doLast {
        println "##vso[build.updatebuildnumber]${project.version}"
    }
}

tasks.withType(JavaCompile) {
	options.forkOptions.jvmArgs += ['--add-opens', 'java.base/java.lang=ALL-UNNAMED']
}

def publishDir = file("$buildDir/repo")

clean.doLast {
    delete publishDir
}

publishing.repositories {
    mavenLocal()
}


